{"version":3,"sources":["webpack:///./src/components/setup/SetupBox.js","webpack:///./src/pages/setup.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["SetupBox","_ref","to","href","icon","iconClass","headingClass","title","children","react_default","a","createElement","common","className","radius","name","Spirit","h4","small","propTypes","PropTypes","node","isRequired","string","SetupPage","data","location","imageUrl","getMetaImageUrls","Fragment","meta","type","description","image","layout","mainClass","bodyClass","page","xl","sectionHeading","sectionSubHeading","setup_SetupBox","shape","site","siteMetadata","siteUrl","pathname","__webpack_exports__","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","meta_ImageMeta","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","url","resolve","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","imageUrls","faq","integrations","tutorials","default","section","proptypes","__webpack_require__","d","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-setup-js-15a1e63cd13cca1b7c45.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst SetupBox = ({ to, href, icon, iconClass, headingClass, title, children }) => (\n    <Box\n        to={to}\n        href={href}\n        className=\"col-12 col-6-ns col-4-l pa8 tdn middarkgrey setup-box-min-height\"\n        radius=\"4\"\n    >\n        <Icon name={icon} className={iconClass} />\n        <h4 className={`${Spirit.h4} darkgrey ${headingClass}`}>{title}</h4>\n        <div className={`${Spirit.small} mt1 midgrey`}>{children}</div>\n    </Box>\n)\n\nSetupBox.propTypes = {\n    children: PropTypes.node.isRequired,\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    to: PropTypes.string,\n    href: PropTypes.string,\n    iconClass: PropTypes.string,\n    headingClass: PropTypes.string,\n}\n\nexport default SetupBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Spirit } from '../styles/spirit-styles'\nimport { Layout } from '../components/common/layout'\nimport { SetupBox } from '../components/setup'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst SetupPage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `How To Install Ghost: Setup & Configuration - Open Source Publishing`\n    const description = `All the tools you need to get started with Ghost 👉Self-hosted install & setup, local install guide for development, contribution guidelines & premium hosted services!`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n                <section className=\"bg-setup\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>Setup Guide</h1>\n                        <p className={Spirit.sectionSubHeading}>\n                            The easiest way to get started is to use <strong>Ghost(Pro)</strong>. If you prefer to self-host, we strongly recommend an Ubuntu server with at least 1GB of memory to run Ghost.\n                        </p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.xl} mt-vw3`}>\n                    <section className=\"grid-12 gutter-row-20 gutter-20-ns gutter-36-l\">\n                        <SetupBox href=\"https://ghost.org/pricing/\" title=\"Ghost(Pro)\" icon=\"ghost-pro-logo\" iconClass=\"w9 h9\" headingClass=\"mt2\">\n                            <strong>Fully managed PaaS</strong> with 1-click deployment, worldwide CDN, backups, upgrades & security\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/ubuntu/\" title=\"Ubuntu\" icon=\"ubuntu-logo\" iconClass=\"w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                A full guide for installing Ghost on Ubuntu <strong>16.04 LTS</strong> and <strong>18.04 LTS</strong> <em>(Recommended)</em>\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox href=\"https://hub.docker.com/_/ghost/\" title=\"Docker\" icon=\"docker-logo\" iconClass=\"w10 h10\" headingClass=\"mt1\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Unofficial community package</strong> for running Ghost inside a Docker container\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/local/\" title=\"Local install\" icon=\"terminal\" iconClass=\"fill-midlightgrey w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Fast-track</strong> local install for running Ghost on your computer or doing theme development\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/source/\" title=\"Install from Source\" icon=\"github-outline\" iconClass=\"fill-darkgrey w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Advanced developer guide</strong> for working directly on Ghost Core and Ghost Admin\n                            </p>\n                        </SetupBox>\n                    </section>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nSetupPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SetupPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://ghost.org/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://ghost.org/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.ghost.org/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://wwfalcon.github.io/sdc_toolkits_page`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}